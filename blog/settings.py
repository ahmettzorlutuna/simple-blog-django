"""
Django settings for blog project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-)w$_nzi_8nc=oqbsf*d*p-_nx$mzbw4ii2zx!$fyjog8_@afa5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [    #uygulma kavramı projeyi aslında parçalara ayırmak da denebilir. ve bu oluşturduğumuz uygulamayı başka projemizded de kullanabiliriz.
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "article",  #oluştuduğumz app i djangoya bildirdik
    "user",  #aslında user appimizde herhangi bir model oluşturmazsak ve migrate işlemi yapılmıyacağı için bunu buraya yazmasak da olurdu. ama form classı yüzünden yazmak gerekti
    'crispy_forms', #indirdiğimiz crispy formu dahil ettik
    "ckeditor", #ckeditör appi mizi dahil ettik
    'django_cleanup.apps.CleanupConfig', #makaleyi silerken o makaleye ilişkin resim dosyalarını da silememiz gerekecek
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media', #media_url e template dan erişmek için. biz formumuzda image ı ekleyeceğiz fakat bunu farkı bir yerde de göstermemiz gerekecek. for this
            ],
        },
    },
]

WSGI_APPLICATION = 'blog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'tr'

TIME_ZONE = 'Europe/Istanbul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [    #buradaki amaç path klasörünün en sonuna static dosyasını eklemesi. çünkü bizim static klasörümüz blog projemizin hemen altına yani bulması için. 
    BASE_DIR / "C:/Users/ahmet/Desktop/blog/article/static" ,#olurda static klasörümüz article appimizin içinde değil de en dış dizinde olursa çağırmak için gereken kod
]
STATIC_ROOT = BASE_DIR / "staticfiles"     #STATIC ROOT un amacı biz projemizi bir servera attığıımız zaman js vs css dosyalarımızı 
                                                        #tek bir dosya halinde tutması için gerek yeri belirttik. ama bu klasörün ismi projeyi 
                                                        # yaparken ki kullandığımız dosyanın isminden farklı olması lazım

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CRISPY_TEMPLATE_PACK = 'bootstrap4' #crispy template için bootstrap 4 kullanacağımızı söyledik

CKEDITOR_CONFIGS = {   #ckeditörde yazılan textlerin düzgün gözükmesi ve kaybolmaması için ufak kodcuk
    "default": {
        "removePlugins": "stylesheetparser",
        "allowedContent" : True,
        "width" : "100%"  #ckeditörün genişliği text ile aynı olacak ve taşmayacak güzel bir görüntü ortaya çıkması için
    }
}

MEDIA_URL = '/media/'    #dosyaların yükleneceği konum belirttik
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')